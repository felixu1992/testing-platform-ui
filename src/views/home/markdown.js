const HOW = '# 菜单说明\n' +
    '\n' +
    '- 联系人：联系人主要用于后续在执行接口用例之后，通过联系人的相关联系方式完成通知操作\n' +
    '- 文件：对于接口中需要使用到的文件，需要提前上传，在使用时选择\n' +
    '- 项目：用于管理项目，以及项目下对应的接口用例\n' +
    '- 测试记录：项目执行接口用例后，会产生接口用例记录，点击详情可以查看具体的执行情况\n' +
    '\n' +
    '# 使用方法\n' +
    '\n' +
    '- step1：新建接口开发者作为联系人(如果需要使用通知的话)\n' +
    '- step2：新建并上传文件(如果接口有需要上传文件的话)\n' +
    '- step3：创建项目，可以选择设置项目的请求地址和请求头，如果用例没有设置请求地址则使用项目设置的，否则使用用例自身的，用例实际请求头为项目加上用例自身设置的，打开通知，在完成用例测试时，如果存在失败的，将会通知对应的开发者\n' +
    '- step4：创建用例，这里重点介绍参数注入、预期结果、结果示例、延迟时长、运行\n' +
    '  - 参数注入：为执行参数中注入一个`key`和`value`，`key`是注入到参数中的步骤，`value`为注入的值，它一定来源于某个接口的返回值，如：`key`为`key1 > key2`，`value`为`data > id`意为在执行用例时，将该条所依赖的用例的放回结果`data`下的`id`字段注入到请求参数的`key1`下`key2`的属性中\n' +
    '  - 预期结果：预期字段为用例返回后需要校验的字段名，预期值可以选择固定值或者某个接口的返回值，当请求完成后，会去找到返回结果中指定的预期字段的值，与所填的固定值或者依赖接口该值做对比，用例校验该用例是否符合预期\n' +
    '  - 结果示例：`JSON`类型，为该接口的返回示例，如果有其他接口需要依赖该接口，则必须填充此字段，否则无法被选到\n' +
    '  - 延迟时长：执行该接口前延迟的时长，默认为`0`即不延迟\n' +
    '  - 运行：在执行项目用例时，可能部分用例不需要执行，则可以通过关闭运行来完成，默认开启\n' +
    '- step5：查看用例记录，用例记录只有在执行项目时，才会产生，会记录当前项目执行的概况，详情会展示每条用例执行的具体情况和执行接口以提供参考';
const DESC = '# 项目说明\n' +
    '\n' +
    '- 适用对象：开发者、测试工程师\n' +
    '- 用途：用于完成对项目中的接口进行组合，完成对接口的验证\n' +
    '- 背景：为了解决原来开发的`Python + Excel`的接口自动化测试工具存在的部分痛点\n' +
    '\n' +
    '# 技术栈\n' +
    '\n' +
    '- Django\n' +
    '- Mysql\n' +
    '- Redis\n' +
    '- Vue\n' +
    '\n' +
    '后端采用`Python`的`Django`框架进行实现，前端采用`Vue`实现\n' +
    '\n' +
    '# 更新日志\n' +
    '\n' +
    '## 1.0.0\n' +
    '\n' +
    '第一个版本，主要完成对原接口自动化工具的最小改造，可以通过页面管理用例，执行用例，管理结果\n' +
    '\n' +
    '- **feature**\n' +
    '  1. 完成联系人管理\n' +
    '  2. 完成文件管理\n' +
    '  3. 完成项目管理和用例管理\n' +
    '  4. 完成测试记录管理\n' +
    '\n' +
    '# TODO\n' +
    '\n' +
    '**迭代点：**\n' +
    '- [ ] 完成首页数据统计功能(迭代)\n' +
    '- [ ] 支持用例的导出与导入(迭代)\n' +
    '- [ ] 支持执行结果的导出(迭代)\n' +
    '- [ ] 支持`swagger`导入接口(迭代)\n' +
    '- [ ] 支持接口覆盖率统计(迭代)\n' +
    '- [ ] 增加后台管理，管理用户，即类似租户(迭代)\n' +
    '- [ ] 用例增加预期值时，缺少固定值嵌套校验(迭代)\n' +
    '- [ ] 支持`Secret`验证，方便用接口执行平台用例(迭代)\n' +
    '- [ ] 用例增加项目下的分类(迭代)\n' +
    '- [ ] 单条用例执行，允许依赖，依赖时去执行依赖项(迭代)\n\n' +

    '**优化点：**\n' +
    '- [ ] 用例名称、备注的梳理(优化)\n' +
    '- [ ] 项目、项目分组、分组筛选梳理(优化)\n' +
    '- [ ] 依赖参数依赖的接口变化时，显示有 bug(优化)\n' +
    '- [x] 新增、编辑用例后返回原位置(优化)\n' +
    '- [x] 用例复制时，生成名称规则为原名称+随机串(优化)\n' +
    '- [ ] 编辑和新增用例时，参数和预期，显示依赖的接口名称(优化)\n\n' +

    '**缺陷点：**\n' +
    '- [ ] 没有增加校验参数时，应该默认通过，当前报错(bug)\n';

export default { HOW, DESC }
